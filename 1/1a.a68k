#!/usr/bin/env ax68k

START:
main:
	LINK     A6,#0
	MOVEQ    #0,D0  ; total
	MOVEQ    #0,D7  ; counter
	MOVEQ    #-3,D3
	MOVEQ    #-5,D5
loop:
	ADDQ.W   #1,D7
	CMPI.W   #1000,D7
	BCC.S    done
	ADDQ.B   #1,D3
	BNE.S    not_3x
	MOVEQ    #-3,D3
	ADD.L    D7,D0
	ADDQ.B   #1,D5
	BNE.S    loop
	MOVEQ    #-5,D5
	BRA.S    loop
not_3x:
	ADDQ.B   #1,D5
	BNE.S    loop
	MOVEQ    #-5,D5
	ADD.L    D7,D0
	BRA.S    loop
done:
	BSR.S    print_decimal
	MOVEQ    #0,D0
	UNLK     A6
	RTS

print_decimal:
	LINK     A6,#-12
	MOVEQ    #10,D1
	MOVEA.L  A6,A0
	MOVE.B   D1,-(A0)
divide:
	DIVU.W   D1,D0
	MOVE.L   D0,D2
	SWAP     D2
	ADDI.B   #'0',D2
	MOVE.B   D2,-(A0)
	EXT.L    D0
	BNE.S    divide
	MOVE.L   A6,D0
	SUB.L    A0,D0
	MOVE.L   D0,-(A7)
	MOVE.L   A0,-(A7)
	PEA      1
	BSR.S    write
	UNLK     A6
	RTS

write:
	MOVEQ    #4,D0
	TRAP     #0
